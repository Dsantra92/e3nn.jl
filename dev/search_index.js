var documenterSearchIndex = {"docs":
[{"location":"examples/#Examples","page":"Examples","title":"Examples","text":"","category":"section"},{"location":"api/irreps/#Irreducible-Representation","page":"Irreps","title":"Irreducible Representation","text":"","category":"section"},{"location":"api/irreps/#E3NN.O3.Irrep","page":"Irreps","title":"E3NN.O3.Irrep","text":"Irrreducible representations of O(3).\n\nThis struct does not contain any data; it is a structure that describes the representation. It is typically used as an argument in other parts of the library to define the input and output representations of functions.\n\nFields:\n\nl::Int: non-negative integer, the degree of the representation, l = 0 1 dots\np::Int: the parity of the representation, either 1 (even) or -1 (odd)\n\nThe degree l corresponds to the angular momentum quantum number and defines the dimension of the irrep, with l = 0 representing a scalar, l = 1 a vector, and higher l values corresponding to tensor-like objects.\n\n\n\n\n\n","category":"type"},{"location":"api/irreps/#E3NN.O3.Irrep-Tuple{AbstractString}","page":"Irreps","title":"E3NN.O3.Irrep","text":"Irrep(ir::T) where {T <: AbstractString}\n\nInstantiate a new O3.Irrep object from it's string representation.\n\nThe string representation should be of the form l followed by \"e\" or \"o\" for even or odd parity, respectively. There can also be a \"y\" at the end, which is used to represent the parity of the spherical harmonics.\n\n\"e\" for even parity, translates to p=1\n\"o\" for odd parity, translates to p=-1\n\"y\" for the parity of the spherical harmonics, translates to p=(-1)^l\n\nExamples\n\nCreate a vector representation (l=1) of the parity of the spherical harmonics (-1^l) gives odd parity):\n\njulia> Irrep(\"1y\")\n1o\n\n\n\n\n\n","category":"method"},{"location":"api/irreps/#E3NN.O3.Irrep-Tuple{Integer, Integer}","page":"Irreps","title":"E3NN.O3.Irrep","text":"Irrep(l::Integer, p::Integer)\n\nInstantiate a new O3.Irrep object.\n\nExamples:\n\nCreate a scalar representation (l=0) of even parity:\n\njulia> Irrep(0, 1)\n0e\n\nCreate a pseudotensor representation (l=2) of odd parity:\n\njulia> Irrep(2, -1)\n2o\n\n\n\n\n\n","category":"method"},{"location":"api/irreps/#E3NN.O3.Irrep-Tuple{Tuple{Integer, Integer}}","page":"Irreps","title":"E3NN.O3.Irrep","text":"Irrep(ir::Tuple{Integer, Integer})\n\nInstantiate a new O3.Irrep object from a tuple of (l, p).\n\n\n\n\n\n","category":"method"},{"location":"api/irreps/#E3NN.O3.Irreps","page":"Irreps","title":"E3NN.O3.Irreps","text":"Irreps\n\nDirect sum of irreducible representations of O(3).\n\nThis struct does not contain any data, it is a structure that describes the representation.\n\nExamples\n\n# Create a representation of 100 l=0 of even parity and 50 pseudo-vectors.\njulia> x = Irreps([(100, (0, 1)), (50, (1, 1))])\n100x0e+50x1e\n\njulia> dim(x)\n250\n\n# Create a representation of 100 l=0 of even parity and 50 pseudo-vectors.\njulia> Irreps(\"100x0e + 50x1e\")\n100x0e+50x1e\n\njulia> Irreps(\"100x0e + 50x1e + 0x2e\")\n100x0e+50x1e+0x2e\n\njulia> Irreps(\"100x0e + 50x1e + 0x2e\") |> lmax\n1\n\njulia> Irrep(\"2e\") in irs(\"0e + 2e\")\ntrue\n\n# Empty Irreps\njulia> Irreps(), Irreps(\"\")\n(, )\n\n\n\n\n\n","category":"type"},{"location":"api/irreps/#E3NN.O3.dim-Tuple{Irrep}","page":"Irreps","title":"E3NN.O3.dim","text":"dim(x::Irreps)\n\nReturns the dimension representation of Irreps, 2l+1\n\n\n\n\n\n","category":"method"},{"location":"api/irreps/#E3NN.O3.isscalar-Tuple{Irrep}","page":"Irreps","title":"E3NN.O3.isscalar","text":"isscalar(x::Irrep)\n\nCheck if the irrep is a scalar representation. Equivalent to x.l == 0 && x.p == 1.\n\n\n\n\n\n","category":"method"},{"location":"LICENSE/#LICENSE","page":"LICENSE","title":"LICENSE","text":"","category":"section"},{"location":"LICENSE/","page":"LICENSE","title":"LICENSE","text":"using Markdown\nMarkdown.parse_file(joinpath(@__DIR__, \"..\", \"..\", \"LICENSE\"))","category":"page"},{"location":"#E3nn:-E(3)-Equivariant-Neural-Networks","page":"Home","title":"E3nn: E(3) Equivariant Neural Networks","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"E3nn.jl provides a pure julia implementation of the e3nn framework. It aims to provide fast and extendable APIs for working with mathbbE^3 Equivariant Neural Networks and other performing related operations. It is built on top of GraphNeuralNetworks.jl and Flux.jl. The APIs are generally consistent with e3nn's PyTorch and JAX libraries but there might be certain differences.","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The package isn't available through the Julia Package Manager (yet). If you want to use it, you can add it directly from GitHub.","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> using Pkg\n\njulia> Pkg.add(\"https://github.com/Dsantra92/e3nn.jl.git\")","category":"page"},{"location":"","page":"Home","title":"Home","text":"note: Note\n","category":"page"},{"location":"","page":"Home","title":"Home","text":"The package is still in under early stages of development and the APIs might change in the future.","category":"page"},{"location":"#Getting-started","page":"Home","title":"Getting started","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"We highly recommend starting with Introduction to Irreps to gain some understanding of the primary components of the network. If you are looking for a bit more hands on experience, have a look at the examples.","category":"page"},{"location":"irreps/#Irreducible-Representations-of-O(3)","page":"Irreps","title":"Irreducible Representations of O(3)","text":"","category":"section"},{"location":"irreps/","page":"Irreps","title":"Irreps","text":"A group representation (D V) describes the action of a group G on a vector space V. Formally, this is written as:","category":"page"},{"location":"irreps/","page":"Irreps","title":"Irreps","text":"D G to textGL(V)","category":"page"},{"location":"irreps/","page":"Irreps","title":"Irreps","text":"where textGL(V) denotes the general linear group of V, i.e., the group of invertible linear transformations on V.","category":"page"},{"location":"irreps/","page":"Irreps","title":"Irreps","text":"A representation of a group is a mapping(a literal matrix) from the group elements to the general linear group of matrices. The irreducible representations, or irreps, are the \"minimal\" non-trivial representations of a group. They are fundamental in the sense that any finite-dimensional representation of a group can be decomposed into a direct sum of irreps.","category":"page"},{"location":"irreps/","page":"Irreps","title":"Irreps","text":"The orthogonal group O(3) is the group of 33 orthogonal matrices. Geometrically, O(3) represents all rotations and reflections in three-dimensional space that preserve distances and angles. Any physical quantity, under the action of O(3), transforms with a representation of O(3)","category":"page"},{"location":"irreps/","page":"Irreps","title":"Irreps","text":"The special orthogonal group SO(3) is a subgroup of O(3). SO(3) represents all rotations in three-dimensional space, excluding reflections. O(3) can be therefore be decomposed as a direct product of SO(3) and the inversion group e I:","category":"page"},{"location":"irreps/","page":"Irreps","title":"Irreps","text":"O(3) cong SO(3) times e I","category":"page"},{"location":"irreps/","page":"Irreps","title":"Irreps","text":"where e is the identity element of the group(here 3 times 3 identity matrix) and I represents inversion(reflection) (-1 times identity matrix).","category":"page"},{"location":"irreps/","page":"Irreps","title":"Irreps","text":"So, any element g in O(3) can be uniquely written as g = ri, where r in SO(3) and i in e I.","category":"page"},{"location":"irreps/","page":"Irreps","title":"Irreps","text":"The irreps of O(3) are the product of the irreps of SO(3) and inversion. The irreps of the SO(3) group are called Wigner matrices D^L. The Inversion group has 2 irreps:","category":"page"},{"location":"irreps/","page":"Irreps","title":"Irreps","text":"The trivial representation sigma_+, where inversion does nothing (multiplies by 1)\nThe sign representation sigma_-, where inversion flips the sign (multiplies by -1).","category":"page"},{"location":"irreps/","page":"Irreps","title":"Irreps","text":"sigma_p(g) = left  beginarrayl 1 text if  g = e  p text if  g = I endarray right","category":"page"},{"location":"irreps/","page":"Irreps","title":"Irreps","text":"Therefore, the irreps of an element g in O(3), where g = ri is given by, sigma_p(i)D^L(r). In our library, we represent it using Irrep.","category":"page"},{"location":"irreps/","page":"Irreps","title":"Irreps","text":"And, Irreps represents the direct sum of irreps of O(3):","category":"page"},{"location":"irreps/","page":"Irreps","title":"Irreps","text":"g = r i mapsto bigoplus_j=1^n m_j sigma_p_j(i) D^L_j(r)","category":"page"},{"location":"irreps/","page":"Irreps","title":"Irreps","text":"where n in mathbbN, m_j in mathbbN, p_j in +1 -1, and L_j in mathbbN_0 for j = 1 ldots n.","category":"page"},{"location":"irreps/","page":"Irreps","title":"Irreps","text":"(Image: image)","category":"page"},{"location":"irreps/#Irrep","page":"Irreps","title":"Irrep","text":"","category":"section"},{"location":"irreps/","page":"Irreps","title":"Irreps","text":"The Irrep struct stores the degree l and the parity p of the representation sigma_p(i)D^l(r).","category":"page"},{"location":"irreps/","page":"Irreps","title":"Irreps","text":"For a small recap:","category":"page"},{"location":"irreps/","page":"Irreps","title":"Irreps","text":"The variable l represents the angular momentum quantum number or degree of the irrep.\nFor l = 0 , the representation is scalar, for l = 1, the representation is a vector. For higher l, the representations are tensors of increasing rank, with dimension (2l + 1).\nThe parity p indicates whether the irrep is invariant under reflection through the origin.\nA positive parity ( p = 1 ) means the object behaves symmetrically under inversion, while negative parity ( p = -1 ) implies antisymmetry, flipping sign upon inversion. Together, l and p fully characterize how a function or field transforms under both rotation and inversion.","category":"page"},{"location":"irreps/","page":"Irreps","title":"Irreps","text":"julia> using E3NN.O3\n\njulia> Irrep(\"1e\")\n1e\n\njulia> Irrep(1, -1)\n1o\n","category":"page"},{"location":"irreps/","page":"Irreps","title":"Irreps","text":"Get the dimension of the representaion.","category":"page"},{"location":"irreps/","page":"Irreps","title":"Irreps","text":"julia> dim(Irrep(\"1e\"))\n3","category":"page"},{"location":"irreps/#Irreps","page":"Irreps","title":"Irreps","text":"","category":"section"},{"location":"irreps/","page":"Irreps","title":"Irreps","text":"The Irreps struct represents a direct sum of irreducible representations. It is a collection of Irrep objects, each with an associated multiplicity. This is the primary way to describe the structure of feature vectors in an equivariant neural network.","category":"page"},{"location":"irreps/#Construction","page":"Irreps","title":"Construction","text":"","category":"section"},{"location":"irreps/","page":"Irreps","title":"Irreps","text":"You can create an Irreps object in several ways:From a string, which is the most common method:","category":"page"},{"location":"irreps/","page":"Irreps","title":"Irreps","text":"julia> Irreps(\"3x0e + 2x1o\")\n3x0e+2x1o","category":"page"},{"location":"irreps/","page":"Irreps","title":"Irreps","text":"From a single Irrep, which will have a multiplicity of 1:","category":"page"},{"location":"irreps/","page":"Irreps","title":"Irreps","text":"julia> Irreps(Irrep(\"2e\"))\n1x2e","category":"page"},{"location":"irreps/","page":"Irreps","title":"Irreps","text":"From a list (Vector or Tuple) of Irrep or MulIrrep objects:","category":"page"},{"location":"irreps/","page":"Irreps","title":"Irreps","text":"julia> Irreps([Irrep(\"0e\"), Irrep(\"1o\")])\n1x0e+1x1o\n\njulia> Irreps([(2, Irrep(\"1e\")), (3, Irrep(\"2o\"))])\n2x1e+3x2o","category":"page"},{"location":"irreps/","page":"Irreps","title":"Irreps","text":"An empty Irreps represents the zero-dimensional vector space.","category":"page"},{"location":"irreps/","page":"Irreps","title":"Irreps","text":"julia> Irreps()\n\njulia> sprint(show, Irreps())\n\"\"","category":"page"},{"location":"irreps/","page":"Irreps","title":"Irreps","text":"Properties and OperationsYou can inspect the properties of an Irreps object with several utility functions.The total dimension of the vector space is given by dim:","category":"page"},{"location":"irreps/","page":"Irreps","title":"Irreps","text":"julia> dim(Irreps(\"3x0e + 2x1o\"))\n9","category":"page"},{"location":"irreps/","page":"Irreps","title":"Irreps","text":"The total number of irreps (sum of multiplicities) is given by num*irreps:","category":"page"},{"location":"irreps/","page":"Irreps","title":"Irreps","text":"julia> num_irreps(Irreps(\"3x0e + 2x1o\"))\n5","category":"page"},{"location":"irreps/","page":"Irreps","title":"Irreps","text":"The maximum l value is given by lmax:","category":"page"},{"location":"irreps/","page":"Irreps","title":"Irreps","text":"julia> lmax(Irreps(\"3x0e + 2x1o\"))\n1","category":"page"},{"location":"irreps/","page":"Irreps","title":"Irreps","text":"You can perform a direct sum using the + operator. The result is automatically regrouped into a canonical form.","category":"page"},{"location":"irreps/","page":"Irreps","title":"Irreps","text":"julia> Irreps(\"1x1o\") + Irreps(\"2x0e\") + Irreps(\"1x1o\")\n2x0e+2x1o","category":"page"},{"location":"irreps/","page":"Irreps","title":"Irreps","text":"You can scale the multiplicities using the * operator.","category":"page"},{"location":"irreps/","page":"Irreps","title":"Irreps","text":"julia> 3 * Irreps(\"1x0e + 2x1o\")\n3x0e+6x1o","category":"page"},{"location":"irreps/#Manipulation-and-Filtering","page":"Irreps","title":"Manipulation and Filtering","text":"","category":"section"},{"location":"irreps/","page":"Irreps","title":"Irreps","text":"The library provides powerful functions to manipulate Irreps. regroup sorts the irreps and combines identical ones by summing their multiplicities. This is useful for creating a canonical representation.","category":"page"},{"location":"irreps/","page":"Irreps","title":"Irreps","text":"julia> regroup(Irreps(\"2x1o + 1x0e + 3x1o\"))\n1x0e+5x1o","category":"page"},{"location":"irreps/","page":"Irreps","title":"Irreps","text":"filter allows you to select a subset of the irreps based on various criteria.","category":"page"},{"location":"irreps/","page":"Irreps","title":"Irreps","text":"julia> irreps = Irreps(\"3x0e + 2x1o + 4x2e\")\n3x0e+2x1o+4x2e\n\njulia> filter(irreps, lmax=1)\n3x0e+2x1o\n\njulia> filter(irreps, keep=Irreps(\"0e + 2e\"))\n3x0e+4x2e\n\njulia> filter(irreps, drop=mulir -> mulir.mul > 2)\n2x1o","category":"page"}]
}
